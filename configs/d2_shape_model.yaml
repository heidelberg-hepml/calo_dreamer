run_name: d2_2000_epoch_shape_model_utransformer_
dtype: float32

# Model
model_type: shape
energy_model: /remote/gpu05/palacios/calo_dreamer/results/20240114_171330_d2_energy_model_ARtransformer_

# Data
hdf5_file: /remote/gpu05/palacios/calo_dreamer/datasets/calo_challenge/dataset_2_1.hdf5
eval_hdf5_file: /remote/gpu05/palacios/calo_dreamer/datasets/calo_challenge/dataset_2_2.hdf5
xml_filename: /remote/gpu05/palacios/calo_dreamer/datasets/calo_challenge/binning_dataset_2.xml
val_frac: 0.2
eps: 1.0e-10
particle_type: electron
eval_dataset: "2"
shape: [1, 45, 16, 9]

transforms: {
    NormalizeByElayer: {
        ptype: /remote/gpu05/palacios/calo_dreamer/datasets/calo_challenge/binning_dataset_2.xml,
        xml_file: electron
    },
    SelectiveUniformNoise: {
        noise_width: 5.0e-6,
        cut: True,
        exclusions: [-45, -44, -43, -42, -41, -40, -39, -38, -37,
                     -36, -35, -34, -33, -32, -31, -30, -29, -28,
                     -27, -26, -25, -24, -23, -22, -21, -20, -19,
                     -18, -17, -16, -15, -14, -13, -12, -11, -10,
                      -9,  -8,  -7,  -6,  -5,  -4,  -3,  -2,  -1]
    },
    ExclusiveLogitTransform: {delta: 1.0e-6, exclusions: [-45]},
    StandardizeFromFile: {
        mean_path: /remote/gpu05/palacios/calo_dreamer/dat/means_2_1.npy,
        std_path: /remote/gpu05/palacios/calo_dreamer/stds_2_1.npy,
        create: True
    },
    LogEnergy: {},
    ScaleEnergy: {e_min: 6.907755, e_max: 13.815510},
    AddFeaturesToCond: {split_index: 6480},
    Reshape: {shape: [1, 45, 16, 9]}
}

# Training
lr: 5.e-3
#max_lr: 1.e-3
batch_size: 1024
validate_every: 10
use_scheduler: True
lr_scheduler: CosineAnnealing
#weight_decay: 0.001
betas: [0.9, 0.999]
n_epochs: 2000
cycle_epochs: 2000
cycle_pct_start: 0.1
save_interval: 100_001

# Sampling
sample_periodically: False
sample_every: 10
sample_every_n_samples: 1001
solver_kwargs: {method: midpoint, options: {step_size: 0.01}}
sample_us: True

# Network
# Network
network: UNet
condition_dim: 46
level_channels: [32, 64, 128]
encode_t: True
encode_t_dim: 128
encode_c: True
encode_c_dim: 128
cond_layers: 2
add_noise: True

