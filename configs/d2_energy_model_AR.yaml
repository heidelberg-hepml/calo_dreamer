run_name: d2_energy_model_ARtransformer_5000e
dtype: float32

# Model
model_type: energy

# Data
hdf5_file: /remote/gpu05/palacios/calo_dreamer/datasets/calo_challenge/dataset_2_1.hdf5
eval_hdf5_file: /remote/gpu05/palacios/calo_dreamer/datasets/calo_challenge/dataset_2_2.hdf5
xml_filename: /remote/gpu05/palacios/calo_dreamer/datasets/calo_challenge/binning_dataset_2.xml
val_frac: 0.2
eps: 1.0e-10
particle_type: electron
eval_dataset: "2"

transforms: {
    NormalizeByElayer: {
        ptype: /remote/gpu05/palacios/calo_dreamer/datasets/calo_challenge/binning_dataset_2.xml,
        xml_file: electron
    },
    SelectDims: {start: -45, end: 0},
    ExclusiveLogitTransform: {delta: 1.0e-6, exclusions: [-45]},
    StandardizeFromFile: {
        mean_path: /remote/gpu05/palacios/calo_dreamer/dat/means_2_1_us.npy,
        std_path: /remote/gpu05/palacios/calo_dreamer/stds_2_1_us.npy,
        create: True
    },
    LogEnergy: {},
    ScaleEnergy: {e_min: 6.907755, e_max: 13.815510},
}

# Training
lr: 1.e-3
#max_lr: 1.e-3
batch_size: 4096
validate_every: 1
use_scheduler: True
lr_scheduler: CosineAnnealing
#weight_decay: 0.001
betas: [0.9, 0.999]
n_epochs: 1000
cycle_epochs: 1000
cycle_pct_start: 0.1
save_interval: 100_001

# Sampling
sample_periodically: False
sample_every: 10
sample_every_n_samples: 1001
solver_kwargs: {method: dopri5, atol: 1.e-4, rtol: 1.e-6}


shape: [45] # number of calorimeter layers

## ResNet block
#network: Conditional_Resnet
#intermediate_dim: 512
#n_blocks: 1
#n_con: 1
#layers_per_block: 8
model: "TransfusionAR"
#CFM transformer block
network: "ARtransformer"
dim_embedding: 64
n_head: 4
n_encoder_layers: 4
n_decoder_layers: 4
dim_feedforward: 512
#c_embed: True
#x_embed: True
n_con: 1
conditional: True

#conditional: True
#encode_t: True
#encode_t_dim: 64
#encode_c: True
#encode_c_dim: 64
#normalization: LayerNorm